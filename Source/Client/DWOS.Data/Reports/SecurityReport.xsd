<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="SecurityReport" targetNamespace="http://tempuri.org/SecurityReport.xsd" xmlns:mstns="http://tempuri.org/SecurityReport.xsd" xmlns="http://tempuri.org/SecurityReport.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="DWOSDataConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="DWOSDataConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.DWOS.Data.Properties.Settings.GlobalReference.Default.DWOSDataConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SecurityGroupTableAdapter" GeneratorDataComponentClassName="SecurityGroupTableAdapter" Name="SecurityGroup" UserDataComponentName="SecurityGroupTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DWOSDataConnectionString (Settings)" DbObjectName="DWOS.dbo.SecurityGroup" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[SecurityGroup] WHERE (([SecurityGroupID] = @Original_SecurityGroupID) AND ([Name] = @Original_Name) AND ([SystemDefined] = @Original_SystemDefined))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SecurityGroupID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SecurityGroupID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_SystemDefined" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="SystemDefined" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[SecurityGroup] ([Name], [SystemDefined]) VALUES (@Name, @SystemDefined);
SELECT SecurityGroupID, Name, SystemDefined FROM SecurityGroup WHERE (SecurityGroupID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@SystemDefined" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="SystemDefined" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT SecurityGroupID, Name, SystemDefined FROM dbo.SecurityGroup</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[SecurityGroup] SET [Name] = @Name, [SystemDefined] = @SystemDefined WHERE (([SecurityGroupID] = @Original_SecurityGroupID) AND ([Name] = @Original_Name) AND ([SystemDefined] = @Original_SystemDefined));
SELECT SecurityGroupID, Name, SystemDefined FROM SecurityGroup WHERE (SecurityGroupID = @SecurityGroupID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@SystemDefined" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="SystemDefined" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SecurityGroupID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SecurityGroupID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_SystemDefined" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="SystemDefined" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="SecurityGroupID" ColumnName="SecurityGroupID" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@SecurityGroupID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="SecurityGroupID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="SecurityGroupID" DataSetColumn="SecurityGroupID" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="SystemDefined" DataSetColumn="SystemDefined" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SecurityGroup_RoleTableAdapter" GeneratorDataComponentClassName="SecurityGroup_RoleTableAdapter" Name="SecurityGroup_Role" UserDataComponentName="SecurityGroup_RoleTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DWOSDataConnectionString (Settings)" DbObjectName="DWOS.dbo.SecurityGroup_Role" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[SecurityGroup_Role] WHERE (([SecurityGroupID] = @Original_SecurityGroupID) AND ([SecurityRoleID] = @Original_SecurityRoleID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SecurityGroupID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SecurityGroupID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_SecurityRoleID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="SecurityRoleID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[SecurityGroup_Role] ([SecurityGroupID], [SecurityRoleID]) VALUES (@SecurityGroupID, @SecurityRoleID);
SELECT SecurityGroupID, SecurityRoleID FROM SecurityGroup_Role WHERE (SecurityRoleID = @SecurityRoleID) AND (SecurityGroupID = @SecurityGroupID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SecurityGroupID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SecurityGroupID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@SecurityRoleID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="SecurityRoleID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT SecurityGroupID, SecurityRoleID FROM dbo.SecurityGroup_Role</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[SecurityGroup_Role] SET [SecurityGroupID] = @SecurityGroupID, [SecurityRoleID] = @SecurityRoleID WHERE (([SecurityGroupID] = @Original_SecurityGroupID) AND ([SecurityRoleID] = @Original_SecurityRoleID));
SELECT SecurityGroupID, SecurityRoleID FROM SecurityGroup_Role WHERE (SecurityRoleID = @SecurityRoleID) AND (SecurityGroupID = @SecurityGroupID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SecurityGroupID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SecurityGroupID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@SecurityRoleID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="SecurityRoleID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SecurityGroupID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SecurityGroupID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_SecurityRoleID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="SecurityRoleID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="SecurityGroupID" DataSetColumn="SecurityGroupID" />
              <Mapping SourceColumn="SecurityRoleID" DataSetColumn="SecurityRoleID" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="DWOSDataConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillBySecurityGroup" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetSecurityGroupPermissions" GeneratorSourceName="FillBySecurityGroup" GetMethodModifier="Public" GetMethodName="GetSecurityGroupPermissions" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetSecurityGroupPermissions" UserSourceName="FillBySecurityGroup">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        SecurityGroup.SecurityGroupID SecurityGroupID, SecurityGroup.Name, SecurityGroup_Role.SecurityRoleID
FROM            SecurityGroup_Role INNER JOIN
                         SecurityGroup ON SecurityGroup_Role.SecurityGroupID = SecurityGroup.SecurityGroupID
WHERE        (SecurityGroup.SecurityGroupID = @SecurityGroupID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="SecurityGroupID" ColumnName="SecurityGroupID" DataSourceName="DWOS.dbo.SecurityGroup" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@SecurityGroupID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="SecurityGroupID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SecurityRoleTableAdapter" GeneratorDataComponentClassName="SecurityRoleTableAdapter" Name="SecurityRole" UserDataComponentName="SecurityRoleTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DWOSDataConnectionString (Settings)" DbObjectName="DWOS.dbo.SecurityRole" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[SecurityRole] WHERE (([SecurityRoleID] = @Original_SecurityRoleID) AND ((@IsNull_Description = 1 AND [Description] IS NULL) OR ([Description] = @Original_Description)) AND ([SecurityRoleCategoryID] = @Original_SecurityRoleCategoryID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_SecurityRoleID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="SecurityRoleID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Description" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_SecurityRoleCategoryID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="SecurityRoleCategoryID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[SecurityRole] ([SecurityRoleID], [Description], [SecurityRoleCategoryID]) VALUES (@SecurityRoleID, @Description, @SecurityRoleCategoryID);
SELECT SecurityRoleID, Description, SecurityRoleCategoryID FROM SecurityRole WHERE (SecurityRoleID = @SecurityRoleID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@SecurityRoleID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="SecurityRoleID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@SecurityRoleCategoryID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="SecurityRoleCategoryID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT SecurityRoleID, Description, SecurityRoleCategoryID FROM dbo.SecurityRole</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[SecurityRole] SET [SecurityRoleID] = @SecurityRoleID, [Description] = @Description, [SecurityRoleCategoryID] = @SecurityRoleCategoryID WHERE (([SecurityRoleID] = @Original_SecurityRoleID) AND ((@IsNull_Description = 1 AND [Description] IS NULL) OR ([Description] = @Original_Description)) AND ([SecurityRoleCategoryID] = @Original_SecurityRoleCategoryID));
SELECT SecurityRoleID, Description, SecurityRoleCategoryID FROM SecurityRole WHERE (SecurityRoleID = @SecurityRoleID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@SecurityRoleID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="SecurityRoleID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@SecurityRoleCategoryID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="SecurityRoleCategoryID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_SecurityRoleID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="SecurityRoleID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Description" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_SecurityRoleCategoryID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="SecurityRoleCategoryID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="SecurityRoleID" DataSetColumn="SecurityRoleID" />
              <Mapping SourceColumn="Description" DataSetColumn="Description" />
              <Mapping SourceColumn="SecurityRoleCategoryID" DataSetColumn="SecurityRoleCategoryID" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="SecurityReport" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="SecurityReport" msprop:Generator_UserDSName="SecurityReport">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="SecurityGroup" msprop:Generator_TableClassName="SecurityGroupDataTable" msprop:Generator_TableVarName="tableSecurityGroup" msprop:Generator_TablePropName="SecurityGroup" msprop:Generator_RowDeletingName="SecurityGroupRowDeleting" msprop:Generator_UserTableName="SecurityGroup" msprop:Generator_RowChangingName="SecurityGroupRowChanging" msprop:Generator_RowEvHandlerName="SecurityGroupRowChangeEventHandler" msprop:Generator_RowDeletedName="SecurityGroupRowDeleted" msprop:Generator_RowEvArgName="SecurityGroupRowChangeEvent" msprop:Generator_RowChangedName="SecurityGroupRowChanged" msprop:Generator_RowClassName="SecurityGroupRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="SecurityGroupID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnSecurityGroupID" msprop:Generator_ColumnPropNameInRow="SecurityGroupID" msprop:Generator_ColumnPropNameInTable="SecurityGroupIDColumn" msprop:Generator_UserColumnName="SecurityGroupID" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="SystemDefined" msprop:Generator_ColumnVarNameInTable="columnSystemDefined" msprop:Generator_ColumnPropNameInRow="SystemDefined" msprop:Generator_ColumnPropNameInTable="SystemDefinedColumn" msprop:Generator_UserColumnName="SystemDefined" type="xs:boolean" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SecurityGroup_Role" msprop:Generator_TableClassName="SecurityGroup_RoleDataTable" msprop:Generator_TableVarName="tableSecurityGroup_Role" msprop:Generator_TablePropName="SecurityGroup_Role" msprop:Generator_RowDeletingName="SecurityGroup_RoleRowDeleting" msprop:Generator_UserTableName="SecurityGroup_Role" msprop:Generator_RowChangingName="SecurityGroup_RoleRowChanging" msprop:Generator_RowEvHandlerName="SecurityGroup_RoleRowChangeEventHandler" msprop:Generator_RowDeletedName="SecurityGroup_RoleRowDeleted" msprop:Generator_RowEvArgName="SecurityGroup_RoleRowChangeEvent" msprop:Generator_RowChangedName="SecurityGroup_RoleRowChanged" msprop:Generator_RowClassName="SecurityGroup_RoleRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="SecurityGroupID" msprop:Generator_ColumnVarNameInTable="columnSecurityGroupID" msprop:Generator_ColumnPropNameInRow="SecurityGroupID" msprop:Generator_ColumnPropNameInTable="SecurityGroupIDColumn" msprop:Generator_UserColumnName="SecurityGroupID" type="xs:int" />
              <xs:element name="SecurityRoleID" msprop:Generator_ColumnVarNameInTable="columnSecurityRoleID" msprop:Generator_ColumnPropNameInRow="SecurityRoleID" msprop:Generator_ColumnPropNameInTable="SecurityRoleIDColumn" msprop:Generator_UserColumnName="SecurityRoleID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SecurityRole" msprop:Generator_TableClassName="SecurityRoleDataTable" msprop:Generator_TableVarName="tableSecurityRole" msprop:Generator_TablePropName="SecurityRole" msprop:Generator_RowDeletingName="SecurityRoleRowDeleting" msprop:Generator_UserTableName="SecurityRole" msprop:Generator_RowChangingName="SecurityRoleRowChanging" msprop:Generator_RowEvHandlerName="SecurityRoleRowChangeEventHandler" msprop:Generator_RowDeletedName="SecurityRoleRowDeleted" msprop:Generator_RowEvArgName="SecurityRoleRowChangeEvent" msprop:Generator_RowChangedName="SecurityRoleRowChanged" msprop:Generator_RowClassName="SecurityRoleRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="SecurityRoleID" msprop:Generator_ColumnVarNameInTable="columnSecurityRoleID" msprop:Generator_ColumnPropNameInRow="SecurityRoleID" msprop:Generator_ColumnPropNameInTable="SecurityRoleIDColumn" msprop:Generator_UserColumnName="SecurityRoleID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Description" msprop:Generator_ColumnVarNameInTable="columnDescription" msprop:Generator_ColumnPropNameInRow="Description" msprop:Generator_ColumnPropNameInTable="DescriptionColumn" msprop:Generator_UserColumnName="Description" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="SecurityRoleCategoryID" msprop:Generator_ColumnVarNameInTable="columnSecurityRoleCategoryID" msprop:Generator_ColumnPropNameInRow="SecurityRoleCategoryID" msprop:Generator_ColumnPropNameInTable="SecurityRoleCategoryIDColumn" msprop:Generator_UserColumnName="SecurityRoleCategoryID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:SecurityGroup" />
      <xs:field xpath="mstns:SecurityGroupID" />
    </xs:unique>
    <xs:unique name="SecurityGroup_Role_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:SecurityGroup_Role" />
      <xs:field xpath="mstns:SecurityGroupID" />
      <xs:field xpath="mstns:SecurityRoleID" />
    </xs:unique>
    <xs:unique name="SecurityRole_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:SecurityRole" />
      <xs:field xpath="mstns:SecurityRoleID" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_SecurityGroup_Role_SecurityGroup" msdata:parent="SecurityGroup" msdata:child="SecurityGroup_Role" msdata:parentkey="SecurityGroupID" msdata:childkey="SecurityGroupID" msprop:Generator_UserChildTable="SecurityGroup_Role" msprop:Generator_ChildPropName="GetSecurityGroup_RoleRows" msprop:Generator_ParentPropName="SecurityGroupRow" msprop:Generator_UserRelationName="FK_SecurityGroup_Role_SecurityGroup" msprop:Generator_RelationVarName="relationFK_SecurityGroup_Role_SecurityGroup" msprop:Generator_UserParentTable="SecurityGroup" />
      <msdata:Relationship name="FK_SecurityGroup_Role_SecurityRole" msdata:parent="SecurityRole" msdata:child="SecurityGroup_Role" msdata:parentkey="SecurityRoleID" msdata:childkey="SecurityRoleID" msprop:Generator_UserChildTable="SecurityGroup_Role" msprop:Generator_ChildPropName="GetSecurityGroup_RoleRows" msprop:Generator_ParentPropName="SecurityRoleRow" msprop:Generator_UserRelationName="FK_SecurityGroup_Role_SecurityRole" msprop:Generator_RelationVarName="relationFK_SecurityGroup_Role_SecurityRole" msprop:Generator_UserParentTable="SecurityRole" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>