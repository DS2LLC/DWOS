

/********************************************************************************
*	Quote
*		Rename existing quote table, then readd new one
*		Used By:
*			Get_IsUserUsed
*			Update_QuoteActiveStatus
*
********************************************************************************/

-- DROP Current Quote Table
EXEC	[dbo].[pAutoAuditDrop] @SchemaName = N'dbo',@TableName = N'Quote'

DROP FUNCTION [dbo].[Quote_RowHistory]
GO
DROP TABLE [dbo].[QuoteFees]
GO
sp_RENAME 'Quote', 'Quote_OLD' --DROP TABLE [dbo].[Quote] -- Let's try just renaming it and keeping for a bit
GO

-- Delete settings
DELETE FROM ApplicationSettings WHERE SettingName = 'QuoteWarranty';

-- Recreate New Quote Tables
	-- Quote
	-- QuotePart
	-- QuotePart_Media
	-- QuotePart_QuoteProcesses
	-- QuoteProcesses
	-- d_Terms
	-- QuoteCloseReason




-- Reseed the col to start at higher quoteid value
dbcc checkident (Quote, reseed, 1000)

/********************************************************************************
*	[Update_QuoteActiveStatus]
*		Update to only change row if needed
*
********************************************************************************/
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[Update_QuoteActiveStatus] 
AS
BEGIN

	-- Update all quotes that are older than 90 days to be inactive
	Update Quote
	SET [Status] = 'Closed'
	WHERE DATEDIFF(DAY, Created, GETDATE()) > 90 AND [Status] <> 'Closed'
END


/********************************************************************************
*	[Get_IsUserUsed]
*		Updated to use new Quote.UserID column
*
********************************************************************************/
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[Get_IsUserUsed]
	@userID int,
	@isUsed bit output
AS
BEGIN
	SET NOCOUNT ON;

	SET @isUsed = 1
	
	-- If is in COC
    IF (SELECT COUNT(*) FROM [COC] WHERE COC.QAUser = @userID) > 0
		RETURN 1
		
	-- If is in Order
    IF (SELECT COUNT(*) FROM [Order] WHERE [Order].CreatedBy = @userID) > 0
		RETURN 1

	-- If is in [CustomerCommunication]
    IF (SELECT COUNT(*) FROM [CustomerCommunication] WHERE [CustomerCommunication].UserID = @userID) > 0
		RETURN 1

	-- If is in [OrderReview]
    IF (SELECT COUNT(*) FROM [OrderReview] WHERE [OrderReview].ReviewedBy = @userID) > 0
		RETURN 1

	-- If is in [[OrderShipment]]
    IF (SELECT COUNT(*) FROM [OrderShipment] WHERE [OrderShipment].ShippingUserID = @userID) > 0
		RETURN 1
	
	-- If is in [PartInspection]
    IF (SELECT COUNT(*) FROM [PartInspection] WHERE [PartInspection].QAUserID = @userID) > 0
		RETURN 1

	-- If is in [Quote]
    IF (SELECT COUNT(*) FROM [Quote] WHERE [Quote].UserID = @userID) > 0
		RETURN 1
	
	SET @isUsed = 0
	RETURN 0
END

/********************************************************************************
*	[Order] 
*		Drop QuoteID from Order Table
*
********************************************************************************/

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
GO
ALTER TABLE dbo.[Order]
	DROP COLUMN QuoteID
GO
ALTER TABLE dbo.[Order] SET (LOCK_ESCALATION = TABLE)
GO
COMMIT

-- Update the Trigger since removed the QuoteID column
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER TRIGGER [dbo].[Order_Audit_Update] ON [dbo].[Order]
 AFTER Update
 NOT FOR REPLICATION AS
 SET NoCount On 
 -- generated by AutoAudit on Jul 22 2009 10:55PM
 -- created by Paul Nielsen 
 -- www.SQLServerBible.com 

DECLARE @AuditTime DATETIME
SET @AuditTime = GetDate()

 Begin Try 
 IF UPDATE([OrderID])
   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, NewValue, RowVersion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(), 'dbo.Order', 'u', Convert(VARCHAR(50), Inserted.[OrderID]),
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Order Number for an Order Detail Line)
        '[OrderID]', Convert(VARCHAR(50), Deleted.[OrderID]),  Convert(VARCHAR(50), Inserted.[OrderID]),
 DELETED.Rowversion + 1
          FROM Inserted
             JOIN Deleted
               ON Inserted.[OrderID] = Deleted.[OrderID]
               AND isnull(Inserted.[OrderID],'') <> isnull(Deleted.[OrderID],'')

 IF UPDATE([CustomerID])
   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, NewValue, RowVersion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(), 'dbo.Order', 'u', Convert(VARCHAR(50), Inserted.[OrderID]),
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Order Number for an Order Detail Line)
        '[CustomerID]', Convert(VARCHAR(50), Deleted.[CustomerID]),  Convert(VARCHAR(50), Inserted.[CustomerID]),
 DELETED.Rowversion + 1
          FROM Inserted
             JOIN Deleted
               ON Inserted.[OrderID] = Deleted.[OrderID]
               AND isnull(Inserted.[CustomerID],'') <> isnull(Deleted.[CustomerID],'')

 IF UPDATE([OrderDate])
   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, NewValue, RowVersion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(), 'dbo.Order', 'u', Convert(VARCHAR(50), Inserted.[OrderID]),
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Order Number for an Order Detail Line)
        '[OrderDate]', Convert(VARCHAR(50), Deleted.[OrderDate]),  Convert(VARCHAR(50), Inserted.[OrderDate]),
 DELETED.Rowversion + 1
          FROM Inserted
             JOIN Deleted
               ON Inserted.[OrderID] = Deleted.[OrderID]
               AND isnull(Inserted.[OrderDate],'') <> isnull(Deleted.[OrderDate],'')

 IF UPDATE([RequiredDate])
   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, NewValue, RowVersion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(), 'dbo.Order', 'u', Convert(VARCHAR(50), Inserted.[OrderID]),
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Order Number for an Order Detail Line)
        '[RequiredDate]', Convert(VARCHAR(50), Deleted.[RequiredDate]),  Convert(VARCHAR(50), Inserted.[RequiredDate]),
 DELETED.Rowversion + 1
          FROM Inserted
             JOIN Deleted
               ON Inserted.[OrderID] = Deleted.[OrderID]
               AND isnull(Inserted.[RequiredDate],'') <> isnull(Deleted.[RequiredDate],'')

 IF UPDATE([Status])
   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, NewValue, RowVersion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(), 'dbo.Order', 'u', Convert(VARCHAR(50), Inserted.[OrderID]),
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Order Number for an Order Detail Line)
        '[Status]', Convert(VARCHAR(50), Deleted.[Status]),  Convert(VARCHAR(50), Inserted.[Status]),
 DELETED.Rowversion + 1
          FROM Inserted
             JOIN Deleted
               ON Inserted.[OrderID] = Deleted.[OrderID]
               AND isnull(Inserted.[Status],'') <> isnull(Deleted.[Status],'')

 IF UPDATE([CompletedDate])
   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, NewValue, RowVersion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(), 'dbo.Order', 'u', Convert(VARCHAR(50), Inserted.[OrderID]),
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Order Number for an Order Detail Line)
        '[CompletedDate]', Convert(VARCHAR(50), Deleted.[CompletedDate]),  Convert(VARCHAR(50), Inserted.[CompletedDate]),
 DELETED.Rowversion + 1
          FROM Inserted
             JOIN Deleted
               ON Inserted.[OrderID] = Deleted.[OrderID]
               AND isnull(Inserted.[CompletedDate],'') <> isnull(Deleted.[CompletedDate],'')

 IF UPDATE([Priority])
   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, NewValue, RowVersion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(), 'dbo.Order', 'u', Convert(VARCHAR(50), Inserted.[OrderID]),
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Order Number for an Order Detail Line)
        '[Priority]', Convert(VARCHAR(50), Deleted.[Priority]),  Convert(VARCHAR(50), Inserted.[Priority]),
 DELETED.Rowversion + 1
          FROM Inserted
             JOIN Deleted
               ON Inserted.[OrderID] = Deleted.[OrderID]
               AND isnull(Inserted.[Priority],'') <> isnull(Deleted.[Priority],'')

 IF UPDATE([PurchaseOrder])
   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, NewValue, RowVersion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(), 'dbo.Order', 'u', Convert(VARCHAR(50), Inserted.[OrderID]),
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Order Number for an Order Detail Line)
        '[PurchaseOrder]', Convert(VARCHAR(50), Deleted.[PurchaseOrder]),  Convert(VARCHAR(50), Inserted.[PurchaseOrder]),
 DELETED.Rowversion + 1
          FROM Inserted
             JOIN Deleted
               ON Inserted.[OrderID] = Deleted.[OrderID]
               AND isnull(Inserted.[PurchaseOrder],'') <> isnull(Deleted.[PurchaseOrder],'')

 IF UPDATE([CreatedBy])
   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, NewValue, RowVersion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(), 'dbo.Order', 'u', Convert(VARCHAR(50), Inserted.[OrderID]),
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Order Number for an Order Detail Line)
        '[CreatedBy]', Convert(VARCHAR(50), Deleted.[CreatedBy]),  Convert(VARCHAR(50), Inserted.[CreatedBy]),
 DELETED.Rowversion + 1
          FROM Inserted
             JOIN Deleted
               ON Inserted.[OrderID] = Deleted.[OrderID]
               AND isnull(Inserted.[CreatedBy],'') <> isnull(Deleted.[CreatedBy],'')

 IF UPDATE([Invoice])
   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, NewValue, RowVersion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(), 'dbo.Order', 'u', Convert(VARCHAR(50), Inserted.[OrderID]),
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Order Number for an Order Detail Line)
        '[Invoice]', Convert(VARCHAR(50), Deleted.[Invoice]),  Convert(VARCHAR(50), Inserted.[Invoice]),
 DELETED.Rowversion + 1
          FROM Inserted
             JOIN Deleted
               ON Inserted.[OrderID] = Deleted.[OrderID]
               AND isnull(Inserted.[Invoice],'') <> isnull(Deleted.[Invoice],'')

 IF UPDATE([ContractReviewed])
   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, NewValue, RowVersion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(), 'dbo.Order', 'u', Convert(VARCHAR(50), Inserted.[OrderID]),
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Order Number for an Order Detail Line)
        '[ContractReviewed]', Convert(VARCHAR(50), Deleted.[ContractReviewed]),  Convert(VARCHAR(50), Inserted.[ContractReviewed]),
 DELETED.Rowversion + 1
          FROM Inserted
             JOIN Deleted
               ON Inserted.[OrderID] = Deleted.[OrderID]
               AND isnull(Inserted.[ContractReviewed],'') <> isnull(Deleted.[ContractReviewed],'')

 IF UPDATE([PartID])
   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, NewValue, RowVersion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(), 'dbo.Order', 'u', Convert(VARCHAR(50), Inserted.[OrderID]),
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Order Number for an Order Detail Line)
        '[PartID]', Convert(VARCHAR(50), Deleted.[PartID]),  Convert(VARCHAR(50), Inserted.[PartID]),
 DELETED.Rowversion + 1
          FROM Inserted
             JOIN Deleted
               ON Inserted.[OrderID] = Deleted.[OrderID]
               AND isnull(Inserted.[PartID],'') <> isnull(Deleted.[PartID],'')

 IF UPDATE([PartQuantity])
   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, NewValue, RowVersion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(), 'dbo.Order', 'u', Convert(VARCHAR(50), Inserted.[OrderID]),
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Order Number for an Order Detail Line)
        '[PartQuantity]', Convert(VARCHAR(50), Deleted.[PartQuantity]),  Convert(VARCHAR(50), Inserted.[PartQuantity]),
 DELETED.Rowversion + 1
          FROM Inserted
             JOIN Deleted
               ON Inserted.[OrderID] = Deleted.[OrderID]
               AND isnull(Inserted.[PartQuantity],'') <> isnull(Deleted.[PartQuantity],'')

 IF UPDATE([MediaID])
   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, NewValue, RowVersion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(), 'dbo.Order', 'u', Convert(VARCHAR(50), Inserted.[OrderID]),
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Order Number for an Order Detail Line)
        '[MediaID]', Convert(VARCHAR(50), Deleted.[MediaID]),  Convert(VARCHAR(50), Inserted.[MediaID]),
 DELETED.Rowversion + 1
          FROM Inserted
             JOIN Deleted
               ON Inserted.[OrderID] = Deleted.[OrderID]
               AND isnull(Inserted.[MediaID],'') <> isnull(Deleted.[MediaID],'')

 IF UPDATE([WorkStatus])
   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, NewValue, RowVersion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(), 'dbo.Order', 'u', Convert(VARCHAR(50), Inserted.[OrderID]),
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Order Number for an Order Detail Line)
        '[WorkStatus]', Convert(VARCHAR(50), Deleted.[WorkStatus]),  Convert(VARCHAR(50), Inserted.[WorkStatus]),
 DELETED.Rowversion + 1
          FROM Inserted
             JOIN Deleted
               ON Inserted.[OrderID] = Deleted.[OrderID]
               AND isnull(Inserted.[WorkStatus],'') <> isnull(Deleted.[WorkStatus],'')

 IF UPDATE([CurrentLocation])
   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, NewValue, RowVersion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(), 'dbo.Order', 'u', Convert(VARCHAR(50), Inserted.[OrderID]),
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Order Number for an Order Detail Line)
        '[CurrentLocation]', Convert(VARCHAR(50), Deleted.[CurrentLocation]),  Convert(VARCHAR(50), Inserted.[CurrentLocation]),
 DELETED.Rowversion + 1
          FROM Inserted
             JOIN Deleted
               ON Inserted.[OrderID] = Deleted.[OrderID]
               AND isnull(Inserted.[CurrentLocation],'') <> isnull(Deleted.[CurrentLocation],'')

 IF UPDATE([BasePrice])
   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, NewValue, RowVersion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(), 'dbo.Order', 'u', Convert(VARCHAR(50), Inserted.[OrderID]),
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Order Number for an Order Detail Line)
        '[BasePrice]', Convert(VARCHAR(50), Deleted.[BasePrice]),  Convert(VARCHAR(50), Inserted.[BasePrice]),
 DELETED.Rowversion + 1
          FROM Inserted
             JOIN Deleted
               ON Inserted.[OrderID] = Deleted.[OrderID]
               AND isnull(Inserted.[BasePrice],'') <> isnull(Deleted.[BasePrice],'')

 IF UPDATE([PriceUnit])
   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, NewValue, RowVersion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(), 'dbo.Order', 'u', Convert(VARCHAR(50), Inserted.[OrderID]),
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Order Number for an Order Detail Line)
        '[PriceUnit]', Convert(VARCHAR(50), Deleted.[PriceUnit]),  Convert(VARCHAR(50), Inserted.[PriceUnit]),
 DELETED.Rowversion + 1
          FROM Inserted
             JOIN Deleted
               ON Inserted.[OrderID] = Deleted.[OrderID]
               AND isnull(Inserted.[PriceUnit],'') <> isnull(Deleted.[PriceUnit],'')

 --IF UPDATE([QuoteID])
 --  INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, NewValue, RowVersion)
 --  SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(), 'dbo.Order', 'u', Convert(VARCHAR(50), Inserted.[OrderID]),
 --       NULL,     -- Row Description (e.g. Order Number)
 --       NULL,     -- Secondary Row Value (e.g. Order Number for an Order Detail Line)
 --       '[QuoteID]', Convert(VARCHAR(50), Deleted.[QuoteID]),  Convert(VARCHAR(50), Inserted.[QuoteID]),
 --DELETED.Rowversion + 1
 --         FROM Inserted
 --            JOIN Deleted
 --              ON Inserted.[OrderID] = Deleted.[OrderID]
 --              AND isnull(Inserted.[QuoteID],'') <> isnull(Deleted.[QuoteID],'')

 IF UPDATE([ShippingMethod])
   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, NewValue, RowVersion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(), 'dbo.Order', 'u', Convert(VARCHAR(50), Inserted.[OrderID]),
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Order Number for an Order Detail Line)
        '[ShippingMethod]', Convert(VARCHAR(50), Deleted.[ShippingMethod]),  Convert(VARCHAR(50), Inserted.[ShippingMethod]),
 DELETED.Rowversion + 1
          FROM Inserted
             JOIN Deleted
               ON Inserted.[OrderID] = Deleted.[OrderID]
               AND isnull(Inserted.[ShippingMethod],'') <> isnull(Deleted.[ShippingMethod],'')

 IF UPDATE([EstShipDate])
   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, NewValue, RowVersion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(), 'dbo.Order', 'u', Convert(VARCHAR(50), Inserted.[OrderID]),
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Order Number for an Order Detail Line)
        '[EstShipDate]', Convert(VARCHAR(50), Deleted.[EstShipDate]),  Convert(VARCHAR(50), Inserted.[EstShipDate]),
 DELETED.Rowversion + 1
          FROM Inserted
             JOIN Deleted
               ON Inserted.[OrderID] = Deleted.[OrderID]
               AND isnull(Inserted.[EstShipDate],'') <> isnull(Deleted.[EstShipDate],'')

 End Try 
 Begin Catch 
   Raiserror('error in [dbo].[Order_audit_update] trigger', 16, 1 ) with log
 End Catch


/********************************************************************************
*	[Part] 
*		Add QuoteID to Part Table
*
********************************************************************************/
BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
GO
ALTER TABLE dbo.Part ADD
	QuotePartID int NULL
GO
ALTER TABLE dbo.Part ADD CONSTRAINT
	FK_Part_QuotePart FOREIGN KEY
	(
	QuotePartID
	) REFERENCES dbo.QuotePart
	(
	QuotePartID
	) ON UPDATE  NO ACTION 
	 ON DELETE  NO ACTION 
	
GO
ALTER TABLE dbo.Part SET (LOCK_ESCALATION = TABLE)
GO
COMMIT

/********************************************************************************
*	[SecurityRole] 
*		Add new permissions for quotes
*
********************************************************************************/

IF NOT EXISTS (SELECT * FROM [SecurityRole] WHERE [SecurityRoleID] = 'QuoteProcessManager')
		BEGIN
			INSERT INTO  [SecurityRole] VALUES ('QuoteProcessManager', 'Ability to edit quote processes.', 'Managers');
		END
	GO

IF NOT EXISTS (SELECT * FROM [SecurityRole] WHERE [SecurityRoleID] = 'TermsManager')
		BEGIN
			INSERT INTO  [SecurityRole] VALUES ('TermsManager', 'Ability to edit terms and conditions.', 'Managers');
		END
	GO


/********************************************************************************
*	[d_PriceUnit]
*		Add new columns Min and Max Qty
*
********************************************************************************/

/* To prevent any potential data loss issues, you should review this script in detail before running it outside the context of the database designer.*/
BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
GO
ALTER TABLE dbo.d_PriceUnit ADD
	MinQuantity int NOT NULL CONSTRAINT DF_d_PriceUnit_MinQuantity DEFAULT 0,
	MaxQuantity int NOT NULL CONSTRAINT DF_d_PriceUnit_MaxQuantity DEFAULT 0
GO
ALTER TABLE dbo.d_PriceUnit SET (LOCK_ESCALATION = TABLE)
GO
COMMIT

-- Update default values
UPDATE d_PriceUnit SET MinQuantity = 1, MaxQuantity = 30 WHERE PriceUnitID = 'Lot'
UPDATE d_PriceUnit SET MinQuantity = 31, MaxQuantity = 999999 WHERE PriceUnitID = 'Each'

IF NOT EXISTS (SELECT * FROM [SecurityRole] WHERE [SecurityRoleID] = 'PriceUnitManager')
		BEGIN
			INSERT INTO  [SecurityRole] VALUES ('PriceUnitManager', 'Ability to edit price units.', 'Managers');
		END
	GO

/********************************************************************************
*	[Users]
*		Add new column email address
*
********************************************************************************/

/* To prevent any potential data loss issues, you should review this script in detail before running it outside the context of the database designer.*/
BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
GO
ALTER TABLE dbo.Users ADD
	EmailAddress nvarchar(255) NULL
GO
ALTER TABLE dbo.Users SET (LOCK_ESCALATION = TABLE)
GO
COMMIT

/********************************************************************************
*	[ApplicationSettings]
*		Updated settings
*
********************************************************************************/
IF NOT EXISTS (SELECT * FROM ApplicationSettings WHERE SettingName = 'SurfaceAreaRequired')
	INSERT INTO ApplicationSettings VALUES ('CustomerPortalEmail', '<html>
<head><title>Customer Portal Authorization</title></head>
<body style="font-family: verdana; font-size: 12px; padding: 3px; margin: 3px; width: 800px;">
    <div style="text-align: center; max-height: 200px;">
        <img alt="Dynamic Paint Solutions" src="[%LOGO%]" width="400" />
    </div>
    <br />
    <div style="text-align: justify;"><strong>Congratulations</strong>! You have been authorized to use the <a href="https://dwos.dynamicpaintsolutions.com">Dynamic Paint Solutions Customer Portal</a>. The customer portal will allow us to communicate better with you and provide an overall better quality of service. Just another example of how Dynamic Paint Solutions is striving to provide you with the best service possible. Login to the  portal now to check orders status, print a COC, run reports, or check the real-time processing being performed on any order.</div>
    <br />
    <br />
    You can access our secure portal with the following information:   
    <br />
    <br />
    <a href="https://dwos.dynamicpaintsolutions.com">https://dwos.dynamicpaintsolutions.com</a>
    <br />
    User Name: [%USERNAME%]   
    <br />
    Password: [%PASSWORD%]
    <br />
    <br />
    If you have any questions or issues then please contact your DPS Sales Associate at <a href="mailto:sales@dynamicpaintsolutions.com">sales@dynamicpaintsolutions.com</a>.   
    <br />
    <br />
    Thank You for being our customer,   
    <br />
    <br />
    Dynamic Paint Solutions</body>
</html>')
ELSE
	UPDATE ApplicationSettings SET Value = '<html>
<head><title>Customer Portal Authorization</title></head>
<body style="font-family: verdana; font-size: 12px; padding: 3px; margin: 3px; width: 800px;">
    <div style="text-align: center; max-height: 200px;">
        <img alt="Dynamic Paint Solutions" src="[%LOGO%]" width="400" />
    </div>
    <br />
    <div style="text-align: justify;"><strong>Congratulations</strong>! You have been authorized to use the <a href="https://dwos.dynamicpaintsolutions.com">Dynamic Paint Solutions Customer Portal</a>. The customer portal will allow us to communicate better with you and provide an overall better quality of service. Just another example of how Dynamic Paint Solutions is striving to provide you with the best service possible. Login to the  portal now to check orders status, print a COC, run reports, or check the real-time processing being performed on any order.</div>
    <br />
    <br />
    You can access our secure portal with the following information:   
    <br />
    <br />
    <a href="https://dwos.dynamicpaintsolutions.com">https://dwos.dynamicpaintsolutions.com</a>
    <br />
    User Name: [%USERNAME%]   
    <br />
    Password: [%PASSWORD%]
    <br />
    <br />
    If you have any questions or issues then please contact your DPS Sales Associate at <a href="mailto:sales@dynamicpaintsolutions.com">sales@dynamicpaintsolutions.com</a>.   
    <br />
    <br />
    Thank You for being our customer,   
    <br />
    <br />
    Dynamic Paint Solutions</body>
</html>'
	WHERE SettingName = 'CustomerPortalEmail'
GO


/********************************************************************************
*	[ApplicationSettings]
*		Delete settings for Crypto licensing, not using that any more.
*
********************************************************************************/
DELETE FROM ApplicationSettings WHERE SettingName = 'CryptoValidationKey';
DELETE FROM ApplicationSettings WHERE SettingName = 'CryptoLicenseKey';
DELETE FROM ApplicationSettings WHERE SettingName = 'CryptoLicenseServerUrl';



/********************************************************************************
*	[Templates]
*		Create new tempaltes table to hold template data.
*
********************************************************************************/

/****** Object:  Table [dbo].[Templates]    Script Date: 8/5/2012 12:35:09 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[Templates](
	[TemplateID] [nvarchar](50) NOT NULL,
	[Template] [nvarchar](max) NOT NULL,
	[Description] [nvarchar](255) NULL,
	[Tokens] [nvarchar](max) NULL,
 CONSTRAINT [PK_Templates] PRIMARY KEY CLUSTERED 
(
	[TemplateID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO

-- Add quote reminder template

INSERT INTO [dbo].[Templates]
           ([TemplateID]
           ,[Template]
           ,[Description]
           ,[Tokens])
     VALUES
           ('QuoteReminder'
           ,'<html><head><title>Open Quotes [%COUNT%]</title></head><body style="font-family: verdana;font-size: 12px;padding: 3px;margin: 3px;width: 800px;"><br /><div style="text-align: justify;"><strong>Open Quotes</strong><br /><br />You currently have %COUNT% open quotes. Please ensure you follow up on all quotes with your customers and close out old quotes as needed.</div><br /><table id="QUOTE_TABLE" style="font-family: verdana;font-size: 12px;padding: 3px;margin: 3px;width: 100%;"><tr style="text-align: center;background-color: #990000;color: #FFFFFF;font-weight: bold"><td>Quote</td><td>Customer</td><td>Contact</td><td>Created</td><td>Expires</td></tr><tr id="ROW_TEMPLATE"><td>%QUOTEID%</td><td>%COMPANY%</td><td>%CONTACT%</td><td>%CREATED%</td><td>%EXPIRE%</td></tr></table></body></html>'
           ,'Email reminder about open quotes.'
           ,'%COUNT%, %QUOTEID%, %COMPANY%, %CONTACT%, %CREATED%, %EXPIRE%');
GO

/********************************************************************************
*	[ApplicationSettings]
*		Add current version setting.
*
********************************************************************************/
INSERT INTO ApplicationSettings VALUES ('CurrentVersion', '12.1');
INSERT INTO ApplicationSettings VALUES ('CompanyKey', '');



/********************************************************************************
*	[LicenseActivationHistory]
*		Add table to track user license activations.
*
********************************************************************************/
USE [DWOS]
GO

/****** Object:  Table [dbo].[LicenseActivationHistory]    Script Date: 8/22/2012 3:45:13 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[LicenseActivationHistory](
	[HistoryID] [int] IDENTITY(1,1) NOT NULL,
	[Action] [nvarchar](50) NOT NULL,
	[TimeStamp] [datetime] NOT NULL,
	[ComputerName] [nvarchar](100) NOT NULL,
	[UID] [nvarchar](100) NOT NULL,
	[UserID] [int] NOT NULL,
 CONSTRAINT [PK_LicenseActivationHistory] PRIMARY KEY CLUSTERED 
(
	[HistoryID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO



/********************************************************************************
*	[SecurityGroupPermissionsReport]
*		Add new permission for report.
*
********************************************************************************/
IF NOT EXISTS (SELECT * FROM [SecurityRole] WHERE [SecurityRoleID] = 'SecurityGroupPermissionsReport')
		BEGIN
			INSERT INTO  [SecurityRole] VALUES ('SecurityGroupPermissionsReport', 'Ability to run report to show all permissons for each security group.', 'Reports');
		END
	GO
		
IF NOT EXISTS (SELECT * FROM [SecurityRole] WHERE [SecurityRoleID] = 'SecurityAuditReport')
		BEGIN
			INSERT INTO  [SecurityRole] VALUES ('SecurityGroupPermissionsReport', 'Ability to run report to show all permissions for each user.', 'Reports');
		END
	GO



/********************************************************************************
*	[Order_Media]
*		Add new table then migrate records from order table to new table
*
********************************************************************************/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

-- Create the Order_Media table
CREATE TABLE [dbo].[Order_Media](
	[OrderID] [int] NOT NULL,
	[MediaID] [int] NOT NULL,
 CONSTRAINT [PK_Order_Media] PRIMARY KEY CLUSTERED 
(
	[OrderID] ASC,
	[MediaID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO

ALTER TABLE [dbo].[Order_Media]  WITH CHECK ADD  CONSTRAINT [FK_Order_Media_Media] FOREIGN KEY([MediaID])
REFERENCES [dbo].[Media] ([MediaID])
GO

ALTER TABLE [dbo].[Order_Media] CHECK CONSTRAINT [FK_Order_Media_Media]
GO

ALTER TABLE [dbo].[Order_Media]  WITH CHECK ADD  CONSTRAINT [FK_Order_Media_Order] FOREIGN KEY([OrderID])
REFERENCES [dbo].[Order] ([OrderID])
ON DELETE CASCADE
GO

ALTER TABLE [dbo].[Order_Media] CHECK CONSTRAINT [FK_Order_Media_Order]
GO

-- Move records from Order to Order_Media
INSERT INTO [Order_Media] (OrderID, MediaID)
SELECT o.OrderID, o.MediaID FROM [Order] o WHERE o.MediaID IS NOT NULL

-- Drop order.mediaId column
BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
GO
ALTER TABLE dbo.[Order]
	DROP CONSTRAINT FK_Order_Media
GO
ALTER TABLE dbo.Media SET (LOCK_ESCALATION = TABLE)
GO
COMMIT
BEGIN TRANSACTION
GO
ALTER TABLE dbo.[Order]
	DROP COLUMN MediaID
GO
ALTER TABLE dbo.[Order] SET (LOCK_ESCALATION = TABLE)
GO
COMMIT

-- Update stored procedure that uses the order.mediaId field
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[Delete_UnusedMedia] 
AS
BEGIN
	SET NOCOUNT ON;

declare @rows int

set @rows = (select COUNT(*) FROM Media)

DELETE FROM Media 
WHERE MediaID IN 
(SELECT m.MediaID FROM Media m
	WHERE 
	NOT	EXISTS (SELECT * FROM Part_Media pm WHERE m.MediaID = pm.MediaID) 
	AND
	NOT EXISTS (SELECT * FROM [Order_Media] o WHERE m.MediaID = o.MediaID)
	AND
	NOT EXISTS (SELECT * FROM [Users] u WHERE m.MediaID = u.MediaID))

select @rows - (select COUNT(*) FROM Media)
	
END

-- Update [Order_Audit_Delete] trigger to remove mediaid
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER TRIGGER [dbo].[Order_Audit_Delete] ON [dbo].[Order]
 AFTER Delete
 NOT FOR REPLICATION AS
 SET NoCount On 

DECLARE @AuditTime DATETIME
SET @AuditTime = GetDate()

 Begin Try 
   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, Rowversion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(),'dbo.Order', 'd', deleted.[OrderID],
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Oder Number for an Order Detail Line)
        '[OrderID]', Convert(VARCHAR(50), Deleted.[OrderID]),  deleted.Rowversion           FROM deleted
          WHERE deleted.[OrderID] is not null

   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, Rowversion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(),'dbo.Order', 'd', deleted.[OrderID],
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Oder Number for an Order Detail Line)
        '[CustomerID]', Convert(VARCHAR(50), Deleted.[CustomerID]),  deleted.Rowversion           FROM deleted
          WHERE deleted.[CustomerID] is not null

   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, Rowversion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(),'dbo.Order', 'd', deleted.[OrderID],
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Oder Number for an Order Detail Line)
        '[OrderDate]', Convert(VARCHAR(50), Deleted.[OrderDate]),  deleted.Rowversion           FROM deleted
          WHERE deleted.[OrderDate] is not null

   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, Rowversion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(),'dbo.Order', 'd', deleted.[OrderID],
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Oder Number for an Order Detail Line)
        '[RequiredDate]', Convert(VARCHAR(50), Deleted.[RequiredDate]),  deleted.Rowversion           FROM deleted
          WHERE deleted.[RequiredDate] is not null

   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, Rowversion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(),'dbo.Order', 'd', deleted.[OrderID],
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Oder Number for an Order Detail Line)
        '[Status]', Convert(VARCHAR(50), Deleted.[Status]),  deleted.Rowversion           FROM deleted
          WHERE deleted.[Status] is not null

   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, Rowversion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(),'dbo.Order', 'd', deleted.[OrderID],
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Oder Number for an Order Detail Line)
        '[CompletedDate]', Convert(VARCHAR(50), Deleted.[CompletedDate]),  deleted.Rowversion           FROM deleted
          WHERE deleted.[CompletedDate] is not null

   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, Rowversion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(),'dbo.Order', 'd', deleted.[OrderID],
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Oder Number for an Order Detail Line)
        '[Priority]', Convert(VARCHAR(50), Deleted.[Priority]),  deleted.Rowversion           FROM deleted
          WHERE deleted.[Priority] is not null

   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, Rowversion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(),'dbo.Order', 'd', deleted.[OrderID],
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Oder Number for an Order Detail Line)
        '[PurchaseOrder]', Convert(VARCHAR(50), Deleted.[PurchaseOrder]),  deleted.Rowversion           FROM deleted
          WHERE deleted.[PurchaseOrder] is not null

   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, Rowversion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(),'dbo.Order', 'd', deleted.[OrderID],
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Oder Number for an Order Detail Line)
        '[CreatedBy]', Convert(VARCHAR(50), Deleted.[CreatedBy]),  deleted.Rowversion           FROM deleted
          WHERE deleted.[CreatedBy] is not null

   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, Rowversion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(),'dbo.Order', 'd', deleted.[OrderID],
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Oder Number for an Order Detail Line)
        '[Invoice]', Convert(VARCHAR(50), Deleted.[Invoice]),  deleted.Rowversion           FROM deleted
          WHERE deleted.[Invoice] is not null

   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, Rowversion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(),'dbo.Order', 'd', deleted.[OrderID],
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Oder Number for an Order Detail Line)
        '[ContractReviewed]', Convert(VARCHAR(50), Deleted.[ContractReviewed]),  deleted.Rowversion           FROM deleted
          WHERE deleted.[ContractReviewed] is not null

   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, Rowversion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(),'dbo.Order', 'd', deleted.[OrderID],
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Oder Number for an Order Detail Line)
        '[PartID]', Convert(VARCHAR(50), Deleted.[PartID]),  deleted.Rowversion           FROM deleted
          WHERE deleted.[PartID] is not null

   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, Rowversion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(),'dbo.Order', 'd', deleted.[OrderID],
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Oder Number for an Order Detail Line)
        '[PartQuantity]', Convert(VARCHAR(50), Deleted.[PartQuantity]),  deleted.Rowversion           FROM deleted
          WHERE deleted.[PartQuantity] is not null

   --INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, Rowversion)
   --SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(),'dbo.Order', 'd', deleted.[OrderID],
   --     NULL,     -- Row Description (e.g. Order Number)
   --     NULL,     -- Secondary Row Value (e.g. Oder Number for an Order Detail Line)
   --     '[MediaID]', Convert(VARCHAR(50), Deleted.[MediaID]),  deleted.Rowversion           FROM deleted
   --       WHERE deleted.[MediaID] is not null

   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, Rowversion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(),'dbo.Order', 'd', deleted.[OrderID],
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Oder Number for an Order Detail Line)
        '[WorkStatus]', Convert(VARCHAR(50), Deleted.[WorkStatus]),  deleted.Rowversion           FROM deleted
          WHERE deleted.[WorkStatus] is not null

   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, Rowversion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(),'dbo.Order', 'd', deleted.[OrderID],
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Oder Number for an Order Detail Line)
        '[CurrentLocation]', Convert(VARCHAR(50), Deleted.[CurrentLocation]),  deleted.Rowversion           FROM deleted
          WHERE deleted.[CurrentLocation] is not null

   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, Rowversion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(),'dbo.Order', 'd', deleted.[OrderID],
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Oder Number for an Order Detail Line)
        '[BasePrice]', Convert(VARCHAR(50), Deleted.[BasePrice]),  deleted.Rowversion           FROM deleted
          WHERE deleted.[BasePrice] is not null

   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, Rowversion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(),'dbo.Order', 'd', deleted.[OrderID],
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Oder Number for an Order Detail Line)
        '[PriceUnit]', Convert(VARCHAR(50), Deleted.[PriceUnit]),  deleted.Rowversion           FROM deleted
          WHERE deleted.[PriceUnit] is not null

   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, Rowversion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(),'dbo.Order', 'd', deleted.[OrderID],
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Oder Number for an Order Detail Line)
        '[ShippingMethod]', Convert(VARCHAR(50), Deleted.[ShippingMethod]),  deleted.Rowversion           FROM deleted
          WHERE deleted.[ShippingMethod] is not null

   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, Rowversion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(),'dbo.Order', 'd', deleted.[OrderID],
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Oder Number for an Order Detail Line)
        '[EstShipDate]', Convert(VARCHAR(50), Deleted.[EstShipDate]),  deleted.Rowversion           FROM deleted
          WHERE deleted.[EstShipDate] is not null

   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, Rowversion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(),'dbo.Order', 'd', deleted.[OrderID],
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Oder Number for an Order Detail Line)
        '[Created]', Convert(VARCHAR(50), Deleted.[Created]),  deleted.Rowversion           FROM deleted
          WHERE deleted.[Created] is not null

   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, Rowversion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(),'dbo.Order', 'd', deleted.[OrderID],
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Oder Number for an Order Detail Line)
        '[Modified]', Convert(VARCHAR(50), Deleted.[Modified]),  deleted.Rowversion           FROM deleted
          WHERE deleted.[Modified] is not null

   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, Rowversion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(),'dbo.Order', 'd', deleted.[OrderID],
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Oder Number for an Order Detail Line)
        '[RowVersion]', Convert(VARCHAR(50), Deleted.[RowVersion]),  deleted.Rowversion           FROM deleted
          WHERE deleted.[RowVersion] is not null

 End Try 
 Begin Catch 
   Raiserror('error in [dbo].[Order_audit_delete trigger', 16, 1 ) with log
 End Catch

 -- Update [Order_Audit_Update] trigger to remove mediaid
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER TRIGGER [dbo].[Order_Audit_Update] ON [dbo].[Order]
 AFTER Update
 NOT FOR REPLICATION AS
 SET NoCount On 

DECLARE @AuditTime DATETIME
SET @AuditTime = GetDate()

 Begin Try 
 IF UPDATE([OrderID])
   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, NewValue, RowVersion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(), 'dbo.Order', 'u', Convert(VARCHAR(50), Inserted.[OrderID]),
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Order Number for an Order Detail Line)
        '[OrderID]', Convert(VARCHAR(50), Deleted.[OrderID]),  Convert(VARCHAR(50), Inserted.[OrderID]),
 DELETED.Rowversion + 1
          FROM Inserted
             JOIN Deleted
               ON Inserted.[OrderID] = Deleted.[OrderID]
               AND isnull(Inserted.[OrderID],'') <> isnull(Deleted.[OrderID],'')

 IF UPDATE([CustomerID])
   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, NewValue, RowVersion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(), 'dbo.Order', 'u', Convert(VARCHAR(50), Inserted.[OrderID]),
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Order Number for an Order Detail Line)
        '[CustomerID]', Convert(VARCHAR(50), Deleted.[CustomerID]),  Convert(VARCHAR(50), Inserted.[CustomerID]),
 DELETED.Rowversion + 1
          FROM Inserted
             JOIN Deleted
               ON Inserted.[OrderID] = Deleted.[OrderID]
               AND isnull(Inserted.[CustomerID],'') <> isnull(Deleted.[CustomerID],'')

 IF UPDATE([OrderDate])
   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, NewValue, RowVersion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(), 'dbo.Order', 'u', Convert(VARCHAR(50), Inserted.[OrderID]),
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Order Number for an Order Detail Line)
        '[OrderDate]', Convert(VARCHAR(50), Deleted.[OrderDate]),  Convert(VARCHAR(50), Inserted.[OrderDate]),
 DELETED.Rowversion + 1
          FROM Inserted
             JOIN Deleted
               ON Inserted.[OrderID] = Deleted.[OrderID]
               AND isnull(Inserted.[OrderDate],'') <> isnull(Deleted.[OrderDate],'')

 IF UPDATE([RequiredDate])
   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, NewValue, RowVersion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(), 'dbo.Order', 'u', Convert(VARCHAR(50), Inserted.[OrderID]),
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Order Number for an Order Detail Line)
        '[RequiredDate]', Convert(VARCHAR(50), Deleted.[RequiredDate]),  Convert(VARCHAR(50), Inserted.[RequiredDate]),
 DELETED.Rowversion + 1
          FROM Inserted
             JOIN Deleted
               ON Inserted.[OrderID] = Deleted.[OrderID]
               AND isnull(Inserted.[RequiredDate],'') <> isnull(Deleted.[RequiredDate],'')

 IF UPDATE([Status])
   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, NewValue, RowVersion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(), 'dbo.Order', 'u', Convert(VARCHAR(50), Inserted.[OrderID]),
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Order Number for an Order Detail Line)
        '[Status]', Convert(VARCHAR(50), Deleted.[Status]),  Convert(VARCHAR(50), Inserted.[Status]),
 DELETED.Rowversion + 1
          FROM Inserted
             JOIN Deleted
               ON Inserted.[OrderID] = Deleted.[OrderID]
               AND isnull(Inserted.[Status],'') <> isnull(Deleted.[Status],'')

 IF UPDATE([CompletedDate])
   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, NewValue, RowVersion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(), 'dbo.Order', 'u', Convert(VARCHAR(50), Inserted.[OrderID]),
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Order Number for an Order Detail Line)
        '[CompletedDate]', Convert(VARCHAR(50), Deleted.[CompletedDate]),  Convert(VARCHAR(50), Inserted.[CompletedDate]),
 DELETED.Rowversion + 1
          FROM Inserted
             JOIN Deleted
               ON Inserted.[OrderID] = Deleted.[OrderID]
               AND isnull(Inserted.[CompletedDate],'') <> isnull(Deleted.[CompletedDate],'')

 IF UPDATE([Priority])
   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, NewValue, RowVersion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(), 'dbo.Order', 'u', Convert(VARCHAR(50), Inserted.[OrderID]),
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Order Number for an Order Detail Line)
        '[Priority]', Convert(VARCHAR(50), Deleted.[Priority]),  Convert(VARCHAR(50), Inserted.[Priority]),
 DELETED.Rowversion + 1
          FROM Inserted
             JOIN Deleted
               ON Inserted.[OrderID] = Deleted.[OrderID]
               AND isnull(Inserted.[Priority],'') <> isnull(Deleted.[Priority],'')

 IF UPDATE([PurchaseOrder])
   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, NewValue, RowVersion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(), 'dbo.Order', 'u', Convert(VARCHAR(50), Inserted.[OrderID]),
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Order Number for an Order Detail Line)
        '[PurchaseOrder]', Convert(VARCHAR(50), Deleted.[PurchaseOrder]),  Convert(VARCHAR(50), Inserted.[PurchaseOrder]),
 DELETED.Rowversion + 1
          FROM Inserted
             JOIN Deleted
               ON Inserted.[OrderID] = Deleted.[OrderID]
               AND isnull(Inserted.[PurchaseOrder],'') <> isnull(Deleted.[PurchaseOrder],'')

 IF UPDATE([CreatedBy])
   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, NewValue, RowVersion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(), 'dbo.Order', 'u', Convert(VARCHAR(50), Inserted.[OrderID]),
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Order Number for an Order Detail Line)
        '[CreatedBy]', Convert(VARCHAR(50), Deleted.[CreatedBy]),  Convert(VARCHAR(50), Inserted.[CreatedBy]),
 DELETED.Rowversion + 1
          FROM Inserted
             JOIN Deleted
               ON Inserted.[OrderID] = Deleted.[OrderID]
               AND isnull(Inserted.[CreatedBy],'') <> isnull(Deleted.[CreatedBy],'')

 IF UPDATE([Invoice])
   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, NewValue, RowVersion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(), 'dbo.Order', 'u', Convert(VARCHAR(50), Inserted.[OrderID]),
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Order Number for an Order Detail Line)
        '[Invoice]', Convert(VARCHAR(50), Deleted.[Invoice]),  Convert(VARCHAR(50), Inserted.[Invoice]),
 DELETED.Rowversion + 1
          FROM Inserted
             JOIN Deleted
               ON Inserted.[OrderID] = Deleted.[OrderID]
               AND isnull(Inserted.[Invoice],'') <> isnull(Deleted.[Invoice],'')

 IF UPDATE([ContractReviewed])
   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, NewValue, RowVersion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(), 'dbo.Order', 'u', Convert(VARCHAR(50), Inserted.[OrderID]),
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Order Number for an Order Detail Line)
        '[ContractReviewed]', Convert(VARCHAR(50), Deleted.[ContractReviewed]),  Convert(VARCHAR(50), Inserted.[ContractReviewed]),
 DELETED.Rowversion + 1
          FROM Inserted
             JOIN Deleted
               ON Inserted.[OrderID] = Deleted.[OrderID]
               AND isnull(Inserted.[ContractReviewed],'') <> isnull(Deleted.[ContractReviewed],'')

 IF UPDATE([PartID])
   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, NewValue, RowVersion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(), 'dbo.Order', 'u', Convert(VARCHAR(50), Inserted.[OrderID]),
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Order Number for an Order Detail Line)
        '[PartID]', Convert(VARCHAR(50), Deleted.[PartID]),  Convert(VARCHAR(50), Inserted.[PartID]),
 DELETED.Rowversion + 1
          FROM Inserted
             JOIN Deleted
               ON Inserted.[OrderID] = Deleted.[OrderID]
               AND isnull(Inserted.[PartID],'') <> isnull(Deleted.[PartID],'')

 IF UPDATE([PartQuantity])
   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, NewValue, RowVersion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(), 'dbo.Order', 'u', Convert(VARCHAR(50), Inserted.[OrderID]),
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Order Number for an Order Detail Line)
        '[PartQuantity]', Convert(VARCHAR(50), Deleted.[PartQuantity]),  Convert(VARCHAR(50), Inserted.[PartQuantity]),
 DELETED.Rowversion + 1
          FROM Inserted
             JOIN Deleted
               ON Inserted.[OrderID] = Deleted.[OrderID]
               AND isnull(Inserted.[PartQuantity],'') <> isnull(Deleted.[PartQuantity],'')

 --IF UPDATE([MediaID])
 --  INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, NewValue, RowVersion)
 --  SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(), 'dbo.Order', 'u', Convert(VARCHAR(50), Inserted.[OrderID]),
 --       NULL,     -- Row Description (e.g. Order Number)
 --       NULL,     -- Secondary Row Value (e.g. Order Number for an Order Detail Line)
 --       '[MediaID]', Convert(VARCHAR(50), Deleted.[MediaID]),  Convert(VARCHAR(50), Inserted.[MediaID]),
 --DELETED.Rowversion + 1
 --         FROM Inserted
 --            JOIN Deleted
 --              ON Inserted.[OrderID] = Deleted.[OrderID]
 --              AND isnull(Inserted.[MediaID],'') <> isnull(Deleted.[MediaID],'')

 IF UPDATE([WorkStatus])
   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, NewValue, RowVersion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(), 'dbo.Order', 'u', Convert(VARCHAR(50), Inserted.[OrderID]),
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Order Number for an Order Detail Line)
        '[WorkStatus]', Convert(VARCHAR(50), Deleted.[WorkStatus]),  Convert(VARCHAR(50), Inserted.[WorkStatus]),
 DELETED.Rowversion + 1
          FROM Inserted
             JOIN Deleted
               ON Inserted.[OrderID] = Deleted.[OrderID]
               AND isnull(Inserted.[WorkStatus],'') <> isnull(Deleted.[WorkStatus],'')

 IF UPDATE([CurrentLocation])
   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, NewValue, RowVersion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(), 'dbo.Order', 'u', Convert(VARCHAR(50), Inserted.[OrderID]),
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Order Number for an Order Detail Line)
        '[CurrentLocation]', Convert(VARCHAR(50), Deleted.[CurrentLocation]),  Convert(VARCHAR(50), Inserted.[CurrentLocation]),
 DELETED.Rowversion + 1
          FROM Inserted
             JOIN Deleted
               ON Inserted.[OrderID] = Deleted.[OrderID]
               AND isnull(Inserted.[CurrentLocation],'') <> isnull(Deleted.[CurrentLocation],'')

 IF UPDATE([BasePrice])
   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, NewValue, RowVersion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(), 'dbo.Order', 'u', Convert(VARCHAR(50), Inserted.[OrderID]),
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Order Number for an Order Detail Line)
        '[BasePrice]', Convert(VARCHAR(50), Deleted.[BasePrice]),  Convert(VARCHAR(50), Inserted.[BasePrice]),
 DELETED.Rowversion + 1
          FROM Inserted
             JOIN Deleted
               ON Inserted.[OrderID] = Deleted.[OrderID]
               AND isnull(Inserted.[BasePrice],'') <> isnull(Deleted.[BasePrice],'')

 IF UPDATE([PriceUnit])
   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, NewValue, RowVersion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(), 'dbo.Order', 'u', Convert(VARCHAR(50), Inserted.[OrderID]),
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Order Number for an Order Detail Line)
        '[PriceUnit]', Convert(VARCHAR(50), Deleted.[PriceUnit]),  Convert(VARCHAR(50), Inserted.[PriceUnit]),
 DELETED.Rowversion + 1
          FROM Inserted
             JOIN Deleted
               ON Inserted.[OrderID] = Deleted.[OrderID]
               AND isnull(Inserted.[PriceUnit],'') <> isnull(Deleted.[PriceUnit],'')

 --IF UPDATE([QuoteID])
 --  INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, NewValue, RowVersion)
 --  SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(), 'dbo.Order', 'u', Convert(VARCHAR(50), Inserted.[OrderID]),
 --       NULL,     -- Row Description (e.g. Order Number)
 --       NULL,     -- Secondary Row Value (e.g. Order Number for an Order Detail Line)
 --       '[QuoteID]', Convert(VARCHAR(50), Deleted.[QuoteID]),  Convert(VARCHAR(50), Inserted.[QuoteID]),
 --DELETED.Rowversion + 1
 --         FROM Inserted
 --            JOIN Deleted
 --              ON Inserted.[OrderID] = Deleted.[OrderID]
 --              AND isnull(Inserted.[QuoteID],'') <> isnull(Deleted.[QuoteID],'')

 IF UPDATE([ShippingMethod])
   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, NewValue, RowVersion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(), 'dbo.Order', 'u', Convert(VARCHAR(50), Inserted.[OrderID]),
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Order Number for an Order Detail Line)
        '[ShippingMethod]', Convert(VARCHAR(50), Deleted.[ShippingMethod]),  Convert(VARCHAR(50), Inserted.[ShippingMethod]),
 DELETED.Rowversion + 1
          FROM Inserted
             JOIN Deleted
               ON Inserted.[OrderID] = Deleted.[OrderID]
               AND isnull(Inserted.[ShippingMethod],'') <> isnull(Deleted.[ShippingMethod],'')

 IF UPDATE([EstShipDate])
   INSERT dbo.Audit (AuditDate, SysUser, Application, HostName, TableName, Operation, PrimaryKey, RowDescription, SecondaryRow, ColumnName, OldValue, NewValue, RowVersion)
   SELECT  @AuditTime, suser_sname(), APP_NAME(), Host_Name(), 'dbo.Order', 'u', Convert(VARCHAR(50), Inserted.[OrderID]),
        NULL,     -- Row Description (e.g. Order Number)
        NULL,     -- Secondary Row Value (e.g. Order Number for an Order Detail Line)
        '[EstShipDate]', Convert(VARCHAR(50), Deleted.[EstShipDate]),  Convert(VARCHAR(50), Inserted.[EstShipDate]),
 DELETED.Rowversion + 1
          FROM Inserted
             JOIN Deleted
               ON Inserted.[OrderID] = Deleted.[OrderID]
               AND isnull(Inserted.[EstShipDate],'') <> isnull(Deleted.[EstShipDate],'')

 End Try 
 Begin Catch 
   Raiserror('error in [dbo].[Order_audit_update] trigger', 16, 1 ) with log
 End Catch

 /********************************************************************************
*	[fnGetNextDept]
*		Add new function used by Get_OrderStatus
*
********************************************************************************/

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date, ,>
-- Description:	<Description, ,>
-- =============================================
CREATE FUNCTION [dbo].[fnGetNextDept] 
(
	@orderID int
)
RETURNS nvarchar(50)
AS
BEGIN
	-- FIND THE NEXT DEPARTMENT FOR THE ORDER
	DECLARE @nextDept NVarChar(50)
	

	-- Find Next Dept that is started but not completed
	SET @nextDept = 
	(
		SELECT  TOP(1) Department FROM [OrderProcesses] 
		WHERE StartDate IS NULL AND EndDate IS NULL AND OrderID = @orderID
		ORDER BY StepOrder
	)

	-- IF NOT IN ORDER ANSWERS THEN GET FROM PART PROCESSES ITSELF
	IF (@nextDept IS NULL)
		BEGIN
			SET @nextDept = 
			(
				SELECT  TOP(1) Department FROM [OrderProcesses] 
				WHERE StartDate IS NULL AND OrderID = @orderID
				ORDER BY StepOrder
			)
		END
	 
	 IF (@nextDept IS NULL)
		SET @nextDept = 'None'
	Return @nextDept

END

GO

 /********************************************************************************
*	[[fnGetCurrentProcess]]
*		Add new function used by Get_OrderStatus
*
********************************************************************************/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date, ,>
-- Description:	<Description, ,>
-- =============================================
CREATE FUNCTION [dbo].[fnGetCurrentProcess] 
(
	@orderID int
)
RETURNS nvarchar(50)
AS
BEGIN
	-- FIND THE NEXT DEPARTMENT FOR THE ORDER
	DECLARE @currentProcessID int
	DECLARE @currentProcessName nvarchar(50)

	-- Find Next Dept that is started but not completed
	SET @currentProcessID = 
	(
		SELECT  TOP(1) ProcessID FROM [OrderProcesses] 
		WHERE StartDate IS NOT NULL AND EndDate IS NULL AND OrderID = @orderID
		ORDER BY StepOrder
	)

	
	IF (@currentProcessID IS NOT NULL)
		BEGIN
			SET @currentProcessName = 
			(
				SELECT Name FROM Process WHERE ProcessID = @currentProcessID
			)
		END
	 
	 
	Return @currentProcessName

END

GO

/********************************************************************************
*	[Get_OrderStatus]
*		Add new function used by Get_OrderStatus
*
********************************************************************************/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[Get_OrderStatus] 
AS
BEGIN
	SET NOCOUNT ON;

	SELECT     [Order].OrderID AS WO, [Order].PurchaseOrder AS PO, Customer.Name AS Customer, Part.Name AS Part, [Order].EstShipDate, [Order].Priority, 
						  [Order].WorkStatus, [Order].CurrentLocation, dbo.fnGetNextDept([Order].OrderID) AS NextDept, dbo.fnGetCurrentProcess([Order].OrderID) AS CurrentProcess, [Order].IsRework
	FROM         [Order] LEFT OUTER JOIN
						  Customer ON [Order].CustomerID = Customer.CustomerID LEFT OUTER JOIN
						  Part ON [Order].PartID = Part.PartID
	WHERE     ([Order].Status = N'Open')
					 
END