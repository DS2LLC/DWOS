<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ultraPictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="tipManager.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>